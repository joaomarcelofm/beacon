<div class="starfield">
  <script>
    window.onload = function() {

      /* --- config start --- */

            var starfieldCanvasId     = "starfieldCanvas", // id of the canvas to use
                framerate             = 60,                // frames per second this animation runs at (this is not exact)
                numberOfStarsModifier = 1.0,               // Number of stars, higher numbers have performance impact
                flightSpeed           = 0.02;              // speed of the flight, the higher this number the faster

                /* ---- config end ---- */
                // var numWidth = 1280.0;
                // var numHeight = 500.0;


                var canvas        = document.getElementById(starfieldCanvasId),
                context       = canvas.getContext("2d"),
                width         =  canvas.width,
                height        =  canvas.height,
                numberOfStars = width * height / 1000 * numberOfStarsModifier,
                dirX          = width / 2,
                dirY          = height / 2,
                stars         = [],
                TWO_PI        = Math.PI * 2;


            // initialize starfield
            for(var x = 0; x < numberOfStars; x++) {
              stars[x] = {
                x: range(0, width),
                y: range(0, height),
                size: range(0, 1)
              };
            }

            // when mouse moves over canvas change middle point of animation
            // canvas.onmousemove = function(event) {
            //     dirX = event.offsetX,
            //     dirY = event.offsetY;
            // }

            // start tick at specified fps
            window.setInterval(tick, Math.floor(3000 / framerate));

            // main routine
            function tick() {
              var oldX,
              oldY;

                // reset canvas for next frame
                context.clearRect(0, 0, width, height);

                for(var x = 0; x < numberOfStars; x++) {
                    // save old status
                    oldX = stars[x].x;
                    oldY = stars[x].y;

                    // calculate changes to star
                    stars[x].x += (stars[x].x - dirX) * stars[x].size * flightSpeed;
                    stars[x].y += (stars[x].y - dirY) * stars[x].size * flightSpeed;
                    stars[x].size += flightSpeed;

                    // if star is out of bounds, reset
                    if(stars[x].x < 0 || stars[x].x > width || stars[x].y < 0 || stars[x].y > height) {
                      stars[x] = {
                        x: range(0, width),
                        y: range(0, height),
                        size: 0
                      };
                    }

                    var colors = ['rgba(127, 208, 223, ', 'rgba(127, 208, 223, ', 'rgba(244, 181, 61, ', 'rgba(243, 129, 49, ', 'rgba(66, 41, 103, ', 'rgba(108, 70, 152, ', 'rgba(226, 33, 114, ', 'rgba(30, 116, 80, ', 'rgba(56, 182, 132, ', 'rgba(252, 252, 252, '];
                    var randomColor = colors[Math.floor(Math.random() * colors.length)]

                    // draw star
                    context.strokeStyle = randomColor + Math.min(stars[x].size, 1) + ")";
                    context.lineWidth = stars[x].size;
                    context.beginPath();
                    context.moveTo(oldX, oldY);
                    context.lineTo(stars[x].x, stars[x].y);
                    context.stroke();
                  }
                }

            // get a random number inside a range
            function range(start, end) {
              return Math.random() * (end - start) + start;
            }
          };
        </script>
        <canvas width="2000" height="600" id="starfieldCanvas"></canvas>
      </div>
